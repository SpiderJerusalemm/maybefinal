from PyQt6 import QtWidgets
from core.window import BaseLayoutWindow
from core.phone_window import PhoneModeExpanded  # –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç
import sys
from core.gpt_bridge import init_selenium_connection

class AppController:
    def __init__(self):
        self.driver = None

        # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.main_window = BaseLayoutWindow()
        self.main_window.controller = self  # üí° –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        self.driver = self.main_window.driver  # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π driver

        # –¢–µ–ª–µ—Ñ–æ–Ω–Ω–æ–µ –æ–∫–Ω–æ
        self.compact_window = PhoneModeExpanded(driver=self.driver, controller=self)

        self.main_window.show()

        self.always_on_top = True  # –∏–ª–∏ False, –µ—Å–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ

    def switch_to_compact(self):
        self.main_window.hide()
        self.compact_window.show()

    def switch_to_main(self):
        self.compact_window.hide()
        self.main_window.show()

if __name__ == "__main__":
    import sys
    try:
        app = QtWidgets.QApplication(sys.argv)
        controller = AppController()  # ‚Üê –≥–¥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è PhoneModeExpanded
        controller.main_window.show()
        sys.exit(app.exec())
    except Exception as e:
        import traceback
        traceback.print_exc()
        input("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞.")